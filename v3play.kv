<CustomLayer>:
    canvas.before:
        Color:
            rgba: self.background_color
        RoundedRectangle:
            radius: self.border_radius
            pos: self.pos
            size: self.size
        Color:
            rgba: self.border_color
        Line:
            width: 1 if self.border_width is None else self.border_width
            rounded_rectangle: (*self.pos, *self.size, *self.border_radius)


<LevelBar>:
    canvas:
        Color:
            rgba: self.level_color
        RoundedRectangle:
            radius: self.radius
            pos: self.x + dp(1.5), self.y + dp(1.5)
            size: dp(self.level - 3), self.size[1] - dp(3)

        Color:
            rgba: self.handle_color
        Ellipse:
            pos: (self.x + dp(self.level - (self.height + 10) / 2), self.y - dp(5))
            size: (self.height + dp(10), self.height + dp(10))
            source: self.handle_image


<HCloseButton>:
    canvas:
        PushMatrix
        Color:
            rgba: (.12, .12, .15, self.toggle_graffiti)
        Rotate:
            angle: self.angle
            origin: self.center
        SmoothLine:
            width: 1.1
            points: (self.center_x, self.y + dp(4), self.center_x, self.top - dp(4))
        SmoothLine:
            width: 1.1
            points: (self.x + dp(4), self.center_y, self.right - dp(4), self.center_y)
    canvas.after:
        PopMatrix


<HMinimizeButton>:
    canvas:
        Color:
            rgba: (.12, .12, .15, self.toggle_graffiti)
        SmoothLine:
            points: (self.x + dp(4), self.center_y, self.right - dp(4), self.center_y)


<HeadBarLogoInterface>:
    canvas:
        Color:
            rgba: self.cover_color
        RoundedRectangle:
            source: self.source
            radius: self.border_radius
            pos: self.x + dp(self.pace), self.y + dp(self.pace)
            size: self.width - dp(self.pace * 2), self.height - dp(self.pace * 2)
    size_hint_x: None
    width: self.height


<HeadBarDescription>:
    markup: True
    shorten: True
    valign: 'middle'
    font_size: '13sp'
    text_size: self.size
    font_name: 'Roboto-Bold'


<HeadBarControlsContainer>:
    size_hint_x: None
    width: dp(70)
    spacing: '8sp'
    padding: 0, '6sp'

    HMinimizeButton:
        id: minimize
        toggle_graffiti: root.toggle_graffiti if not self.disabled else .1
        on_release: root._invoke_minimizing(self)
    HResizeButton:
        id: resize
        toggle_graffiti: root.toggle_graffiti if not self.disabled else .1
        on_release: root._invoke_resizing(self)
    HCloseButton:
        id: close
        toggle_graffiti: root.toggle_graffiti
        on_release: root._invoke_closing(self)


<HeadBarTemplate>:
    size_hint_y: None
    height: dp(34)
    spacing: '6sp'
    padding: '10sp', '2sp'

    # logo & title UIx
    BoxLayout:
        id: app_desc

        # Logo-part
        HeadBarLogoInterface:
            id: h_logo
            icon_name: root.logo_name

        # Title-part
        HeadBarDescription:
            text: root.title
            color: root.title_color

    HeadBarControlsContainer:
        id: head_controls
        disable_controls: root.disable_controls


<SyaiV3Play>:
    orientation: 'vertical'

    AppHeadBar:  # 1-layout
    BoxLayout:  # 2-layout
        orientation: 'vertical'
        BoxLayer:  # 2.1-layout ~ aka menu-bar
            # background_color: [.28, .28, .26, 1]
            size_hint_y: None
            height: dp(24)
        BoxLayout:  # 2.2-layout
            BoxLayout:  # 2.2.1-layout
                size_hint_x: None
                width: min(dp(400), root.width * .33)
                BoxLayer:  # 2.2.1.1-layout ~ aka category search-engine
                    size_hint_y: None
                    height: dp(34)
                BoxLayer:  # 2.2.1.2-layout ~ aka category&sub contents
                BoxLayer:  # 2.2.1.3-layout ~ aka category&sub menu
                    size_hint_y: None
                    height: dp(34)
            BoxLayout:  # 2.2.2-layout
                ScreenManager:  # 2.2.2.1-layout ~ modulars manager
                BoxLayout:  # 2.2.2.2-layout ~ aka current modular working list
                    size_hint_x: None
                    orientation: 'vertical'
                    width: min(dp(220), self.parent.width * .35)
                    BoxLayer:  # 2.2.2.2.1-layout ~ aka c.w.l. search-engine
                        size_hint_y: None
                        height: dp(34)
                    ScrollView:  # 2.2.2.2.2-layout ~ aka c.w.l. scroller
                        GridLayer:  # 2.2.2.2.2.1-layout ~ aka c.w.l.
                            cols: 1
                            size_hint_y: None
                            height: max(self.minimum_height, self.parent.height)
    BoxLayer:  # 4-layout ~ aka modulars info-display and menu
        # background_color: [.12, .12, .15, 1]
        size_hint_y: None
        height: dp(28)
